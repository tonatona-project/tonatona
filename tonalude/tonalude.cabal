cabal-version: 1.24

-- This file has been generated from package.yaml by hpack version 0.35.1.
--
-- see: https://github.com/sol/hpack

name:           tonalude
version:        0.2.0.0
synopsis:       A standard library for Tonatona framework.
description:    Tonaparser provides a way to pass runtime configurations. This library is supposed to be used with @tonatona@. The Tonalude module works as a prelude replacement for Tonatona framework, providing more functionality and types out of the box than the standard prelude (such as common data types like ByteString and Text), as well as removing common "gotchas", like partial functions and lazy I/O.
category:       Control, Library, Tonatona
homepage:       https://github.com/tonatona-project/tonatona#readme
bug-reports:    https://github.com/tonatona-project/tonatona/issues
author:         Kadzuya Okamoto
maintainer:     arow.okamoto+github@gmail.com
copyright:      2018 Kadzuya Okamoto
license:        MIT
license-file:   LICENSE
build-type:     Custom
tested-with:
    GHC==9.4.6, GHC==9.2.8, GHC==9.0.2, GHC==8.10.7
extra-source-files:
    README.md

source-repository head
  type: git
  location: https://github.com/tonatona-project/tonatona

custom-setup
  setup-depends:
      Cabal <3.12
    , base >=4.14 && <4.18
    , cabal-doctest >=1 && <1.1
    , rio ==0.1.*

library
  exposed-modules:
      Tonalude
      Tonalude.Extra
  other-modules:
      Tonalude.Prelude.Display
      Tonalude.Prelude.IO
      Tonalude.Prelude.Reexports
      Tonalude.Prelude.Renames
      Tonalude.Prelude.RIO
      Tonalude.Prelude.Text
      Tonalude.Prelude.Trace
  hs-source-dirs:
      src
  default-extensions:
      BangPatterns
      BinaryLiterals
      ConstraintKinds
      DataKinds
      DefaultSignatures
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveGeneric
      DeriveTraversable
      DoAndIfThenElse
      EmptyDataDecls
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      FunctionalDependencies
      GADTs
      GeneralizedNewtypeDeriving
      InstanceSigs
      KindSignatures
      LambdaCase
      MultiParamTypeClasses
      MultiWayIf
      NamedFieldPuns
      NoImplicitPrelude
      OverloadedStrings
      PartialTypeSignatures
      PatternGuards
      PolyKinds
      RankNTypes
      RecordWildCards
      ScopedTypeVariables
      StandaloneDeriving
      TupleSections
      TypeFamilies
      TypeSynonymInstances
      ViewPatterns
  ghc-options: -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints
  build-depends:
      base >=4.14 && <4.18
    , bytestring >=0.10 && <0.12
    , rio >=0.1.5 && <0.2
    , unliftio >=0.2.4 && <0.3
  default-language: Haskell2010

test-suite doctests
  type: exitcode-stdio-1.0
  main-is: doctests.hs
  hs-source-dirs:
      test
  default-extensions:
      BangPatterns
      BinaryLiterals
      ConstraintKinds
      DataKinds
      DefaultSignatures
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveGeneric
      DeriveTraversable
      DoAndIfThenElse
      EmptyDataDecls
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      FunctionalDependencies
      GADTs
      GeneralizedNewtypeDeriving
      InstanceSigs
      KindSignatures
      LambdaCase
      MultiParamTypeClasses
      MultiWayIf
      NamedFieldPuns
      NoImplicitPrelude
      OverloadedStrings
      PartialTypeSignatures
      PatternGuards
      PolyKinds
      RankNTypes
      RecordWildCards
      ScopedTypeVariables
      StandaloneDeriving
      TupleSections
      TypeFamilies
      TypeSynonymInstances
      ViewPatterns
  ghc-options: -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints
  build-depends:
      base >=4.14 && <4.18
    , bytestring >=0.10 && <0.12
    , doctest
    , rio >=0.1.5 && <0.2
    , unliftio >=0.2.4 && <0.3
  default-language: Haskell2010

test-suite spec
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  hs-source-dirs:
      test
  default-extensions:
      BangPatterns
      BinaryLiterals
      ConstraintKinds
      DataKinds
      DefaultSignatures
      DeriveDataTypeable
      DeriveFoldable
      DeriveFunctor
      DeriveGeneric
      DeriveTraversable
      DoAndIfThenElse
      EmptyDataDecls
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      FunctionalDependencies
      GADTs
      GeneralizedNewtypeDeriving
      InstanceSigs
      KindSignatures
      LambdaCase
      MultiParamTypeClasses
      MultiWayIf
      NamedFieldPuns
      NoImplicitPrelude
      OverloadedStrings
      PartialTypeSignatures
      PatternGuards
      PolyKinds
      RankNTypes
      RecordWildCards
      ScopedTypeVariables
      StandaloneDeriving
      TupleSections
      TypeFamilies
      TypeSynonymInstances
      ViewPatterns
  ghc-options: -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints
  build-depends:
      base >=4.14 && <4.18
    , bytestring >=0.10 && <0.12
    , rio >=0.1.5 && <0.2
    , unliftio >=0.2.4 && <0.3
  default-language: Haskell2010
